/**
 * Created by yanqiong on 2017/8/8.
 */
require(['jquery', 'knockout','/df/supervise/ncrd.js','bootstrap','dateZH', 'uui', 'tree', 'grid', 'ip'],
    function ($, ko,ncrd, _) {
        window.ko = ko;
        var tokenid;
        var options;
        var eleCode;
        var entity_id;
        var pageId;
		var pViewType = {
        		VIEWTYPE_INPUT : "001",// 录入视图
        		VIEWTYPE_LIST : "002",// 列表视图
        		VIEWTYPE_QUERY : "003"// 查询视图
        };
        
        //URL
        var testURL = '/df/cs/test.do';
        var viewListURL= '/df/cs/selectAll.do';
        var doPayWorkFlowURL= '/df/workflow/work.do';
        var depTreeURL ='/df/tree/initTree.do';
        var btnsURL = '/df/cs/getActionButton.do';
        var sumListURL = '/df/cs/getbill.do';
        var viewModel = {
        		SearchdepTreeKEY: ko.observable(""),
        		SearchdepTreeKEY2: ko.observable(""),
        		SearchdepTreeKEY3: ko.observable(""),
        		//模糊查询单位树
                searchDepTree : function () {
                	 ncrd.findTreeNode($.fn.zTree.getZTreeObj("depTree"), viewModel.SearchdepTreeKEY());    
                },  
              //模糊查询单位树
                searchDepTree2 : function () {
                	 ncrd.findTreeNode($.fn.zTree.getZTreeObj("depTree2"), viewModel.SearchdepTreeKEY2());    
                }, 
              //模糊查询单位树
                searchDepTree3 : function () {
                	 ncrd.findTreeNode($.fn.zTree.getZTreeObj("depTree3"), viewModel.SearchdepTreeKEY3());    
                },
            exDataTable:new u.DataTable({
                meta: {

                }
            }),    
            exDataTable2:new u.DataTable({
                meta: {

                }
            }),
            btnDataTable:new u.DataTable({
                meta: {

                }
            }),
            depTreeSetting: {
                view:{
                    showLine: false,
                    selectedMulti: false,
                    showIcon: false,
                    showTitle: true,
                    nameIsHTML: true
                },
                callback:{
                    onClick:function(e,id,node){
                    	 var btnData = viewModel.btnDataTable.getSimpleData();
                        var selectNodeId = node.CHR_ID;
                        var type = node.TYPE;
               		    var code = node.CHR_CODE;
               		    var oid = node.OID;
                        if(selectNodeId == "000") {
                        	viewModel.refresh("","","","","9");
                        	for(var i=0;i<btnData.length;i++) {
                        		var btnId = btnData[i].BUTTON_ID;
                        		if(btnData[i].ENABLED == "1") {
                        			$("#"+btnId).removeAttr("disabled","disabled");
                        		}else {
                        			$("#"+btnId).attr("disabled","disabled");
                        		}
                        	}
                        }else {
                        	viewModel.refresh(selectNodeId,type,code,oid,"9");
                        }
                        var selectRow = viewModel.gridViewModel.gridData.getSimpleData();
                        for(var i=0;i<btnData.length;i++) {
                    		var btnId = btnData[i].BUTTON_ID;
                    		if(btnData[i].DISPLAY_STATUS == selectRow[0].STATUS_CODE || (btnData[i].DISPLAY_STATUS == "9" && btnData[i].ENABLED == "1")) {
                    			$("#"+btnId).removeAttr("disabled","disabled");
                    		}else {
                    			$("#"+btnId).attr("disabled","disabled");
                    		}
                    	}
                    }
                }
            },
            depTreeDataTable: new u.DataTable({
                meta: {
                    'CHR_ID': {
                        'value':""
                    },
                    'PARENT_ID': {
                        'value':""
                    },
                    'CHR_NAME':{
                        'value':""
                    },
                    'CHR_CODE':{
                        'value':""
                    },
                    'DISP_CODE': {
                        'value':""
                    },
                    'LEVEL_NUM':{
                        'value':""
                    },
                    'IS_LEAF':{
                        'value':""
                    },
                    'TYPE':{
                        'value':""
                    },
                    'ENABLED':{
                        'value':""
                    },
                    'CREATE_DATE':{
                        'value':""
                    },
                    'CREATE_USER':{
                        'value':""
                    },
                    'LATEST_OP_DATE':{
                        'value':""
                    },
                    'IS_DELETED':{
                        'value':""
                    },
                    'LATEST_OP_USER':{
                        'value':""
                    },
                    'LAST_VER':{
                        'value':""
                    },
                    'RG_CODE':{
                        'value':""
                    },
                    'SET_YEAR':{
                        'value':""
                    },
                    'OID':{
                        'value':""
                    },               
                }
            })
        };

        //初始化事项下拉框
        viewModel.initDropDown = function () {
            var objSelect = document.getElementById("eventName");//获得select标签对象
            var data = window.test.test.exEventData;
            for(var i = 0;i<data.length;i++) {
                var new_opt = new Option(data[i].eventName, data[i].eventNo); //直接new一个option对象，然后把text和value值都赋上
                objSelect.options.add(new_opt);
            }
        };

        //初始化按钮
        viewModel.initBtns = function() {
        	$.ajax({
	            type: 'get',
	            url: btnsURL + "?tokenid=" + tokenid + "&ajax=noCache",
	            data: {"menu_id":pageId},
	            dataType: 'JSON',
	            async: true,
	            success: function (result) {
	            	console.log(result);	            	
	            	if(result.errorCode == "0") {
	            		var data = result.data;
	            		viewModel.btnDataTable.setSimpleData(data);
	            		for(var i=0;i<data.length;i++) {
	            			$("#csof-sup-btns").append("<button class='" + data[i].CLASS_NAME + "' type='button' id='"+data[i].BUTTON_ID+"' "+data[i].PARAM+" onclick='"+data[i].FUNC_NAME+"(this.id)'>"+data[i].DISPLAY_TITLE+"</button>");
	            			if(data[i].ENABLED == "0") {
	            				$("#"+data[i].BUTTON_ID).attr("disabled","disabled");
	            			}
	            		}	            		
	            	}	            	
	            }, error: function () {
	                ip.ipInfoJump("错误", 'error');
	            }
            });
        };       
        
        //退回工作流函数
        workFlowReturn = function (id){
        	var treeObj = $.fn.zTree.getZTreeObj("depTree");
        	var nodes = treeObj.getSelectedNodes();
        	if(nodes.length > 0) {
        		var selectNodeId = nodes[0].CHR_ID;
                var depTreeData = viewModel.depTreeDataTable.getSimpleData();
                var type = nodes[0].TYPE;
       		    var code = nodes[0].CHR_CODE;
       		    var oid = nodes[0].OID;
                var btnData = viewModel.btnDataTable.getSimpleData();
            	for(var bt = 0; bt<btnData.length;bt++) {
            		if(btnData[bt].BUTTON_ID == id) {
            			var btn = btnData[bt];
            			break;
            		}
            	}
            	var selectRow = viewModel.gridViewModel.gridData.getSimpleData();
            	if(selectRow.length > 0) { 
            		for(var j=0;j<selectRow.length;j++) {
            			var entity_id = selectRow[j].ID;
            			var status = selectRow[j].STATUS_CODE;
                		if(status == "0") {
                			var op_name = btn.DISPLAY_TITLE;
                    		var op_type = btn.ACTION_TYPE;
                			var data = {
                        			"menu_id":pageId,
                        			"entity_id":entity_id,
                        			"billtype_code":101,//die
                        			"op_type":op_type,
                        			"op_name":op_name,
                        	};
                        	$.ajax({
                                type: 'get',
                                url: doPayWorkFlowURL + "?tokenid=" + tokenid + "&ajax=noCache",
                                data: data,
                                dataType: 'JSON',
                                async: false,
                                success: function (result) { 
                                    viewModel.refresh(selectNodeId,type,code,oid,"0");
                                    viewModel.initDepTree();
                                    treeObj.selectNode(nodes[0]);
                                    for(var n=0;n<btnData.length;n++) {
                                		var btnId = btnData[n].BUTTON_ID;
                                		if(btnData[n].DISPLAY_STATUS == "9" && btnData[n].ENABLED != "0") {
                                			$("#"+btnId).removeAttr("disabled","disabled");
                                		}else {
                                			$("#"+btnId).attr("disabled","disabled");
                                		}
                                	} 
                                }, error: function () {
                                    ip.ipInfoJump("错误", 'error');
                                }
                            }); 
                		}else {
                			ip.ipInfoJump("操作与数据状态不符，不能操作", 'info');
                		}
                	}
                }else {
            		ip.ipInfoJump("没有数据，不能操作", 'info');
            	}        	
            }else {
            	ip.ipInfoJump("请选择需要操作的机构", 'info');
            }    
        }
       
        //收回
        workFlowUndo = function(id){
        	var treeObj = $.fn.zTree.getZTreeObj("depTree");
        	var nodes = treeObj.getSelectedNodes();
        	if(nodes.length > 0) {
        		var selectNodeId = nodes[0].CHR_ID;
                var depTreeData = viewModel.depTreeDataTable.getSimpleData();
                var type = nodes[0].TYPE;
       		    var code = nodes[0].CHR_CODE;
       		    var oid = nodes[0].OID;
                var btnData = viewModel.btnDataTable.getSimpleData();
            	for(var bt = 0; bt<btnData.length;bt++) {
            		if(btnData[bt].BUTTON_ID == id) {
            			var btn = btnData[bt];
            			break;
            		}
            	}
            	var selectRow = viewModel.gridViewModel.gridData.getSimpleData();
            	if(selectRow.length > 0) { 
            		for(var j=0;j<selectRow.length;j++) {
            			var entity_id = selectRow[j].ID;
            			var status = selectRow[j].STATUS_CODE;
                		if(status == "1") {
                			var op_name = btn.DISPLAY_TITLE;
                    		var op_type = btn.ACTION_TYPE;
                			var data = {
                        			"menu_id":pageId,
                        			"entity_id":entity_id,
                        			"billtype_code":101,//die
                        			"op_type":op_type,
                        			"op_name":op_name,
                        	};
                        	$.ajax({
                                type: 'get',
                                url: doPayWorkFlowURL + "?tokenid=" + tokenid + "&ajax=noCache",
                                data: data,
                                dataType: 'JSON',
                                async: false,
                                success: function (result) { 
                                    viewModel.refresh(selectNodeId,type,code,oid,"0");
                                    viewModel.initDepTree();
                                    treeObj.selectNode(nodes[0]);
                                    for(var n=0;n<btnData.length;n++) {
                                		var btnId = btnData[n].BUTTON_ID;
                                		if(btnData[n].DISPLAY_STATUS == "0" || (btnData[n].DISPLAY_STATUS == "9" && btnData[n].ENABLED != "0")) {
                                			$("#"+btnId).removeAttr("disabled","disabled");
                                		}else {
                                			$("#"+btnId).attr("disabled","disabled");
                                		}
                                	} 
                                }, error: function () {
                                    ip.ipInfoJump("错误", 'error');
                                }
                            }); 
                		}else {
                			ip.ipInfoJump("操作与数据状态不符，不能操作", 'info');
                		}
                	}
                }else {
            		ip.ipInfoJump("没有数据，不能操作", 'info');
            	}        	
            }else {
            	ip.ipInfoJump("请选择需要操作的机构", 'info');
            }            	
        };
        //附件上传
        publicFileman = function(id){
            alert("附件上传");
        };
        //上报
        workFlowEnd = function(id){
        	var treeObj = $.fn.zTree.getZTreeObj("depTree");
        	var nodes = treeObj.getSelectedNodes();
        	if(nodes.length > 0) {
        		var selectNodeId = nodes[0].CHR_ID;
                var depTreeData = viewModel.depTreeDataTable.getSimpleData();
                var type = nodes[0].TYPE;
       		    var code = nodes[0].CHR_CODE;
       		    var oid = nodes[0].OID;
                var btnData = viewModel.btnDataTable.getSimpleData();
            	for(var bt = 0; bt<btnData.length;bt++) {
            		if(btnData[bt].BUTTON_ID == id) {
            			var btn = btnData[bt];
            			break;
            		}
            	}
            	var selectRow = viewModel.gridViewModel.gridData.getSimpleData();
            	if(selectRow.length > 0) { 
            		for(var j=0;j<selectRow.length;j++) {
            			var entity_id = selectRow[j].ID;
            			var status = selectRow[j].STATUS_CODE;
                		if(status == "0") {
                			var op_name = btn.DISPLAY_TITLE;
                    		var op_type = btn.ACTION_TYPE;
                			var data = {
                        			"menu_id":pageId,
                        			"entity_id":entity_id,
                        			"billtype_code":101,//die
                        			"op_type":op_type,
                        			"op_name":op_name,
                        	};
                        	$.ajax({
                                type: 'get',
                                url: doPayWorkFlowURL + "?tokenid=" + tokenid + "&ajax=noCache",
                                data: data,
                                dataType: 'JSON',
                                async: false,
                                success: function (result) { 
                                    viewModel.refresh(selectNodeId,type,code,oid,"1");
                                    viewModel.initDepTree();
                                    treeObj.selectNode(nodes[0]);
                                    for(var n=0;n<btnData.length;n++) {
                                		var btnId = btnData[n].BUTTON_ID;
                                		if((btnData[i].DISPLAY_STATUS == "9" && btnData[i].ENABLED == "1") || btnData[i].DISPLAY_STATUS == "1") {
                                			$("#"+btnId).removeAttr("disabled","disabled");
                                		}else {
                                			$("#"+btnId).attr("disabled","disabled");
                                		}
                                	} 
                                }, error: function () {
                                    ip.ipInfoJump("错误", 'error');
                                }
                            }); 
                		}else {
                			ip.ipInfoJump("操作与数据状态不符，不能操作", 'info');
                		}
                	}
                }else {
            		ip.ipInfoJump("没有数据，不能操作", 'info');
            	}        	
            }else {
            	ip.ipInfoJump("请选择需要操作的机构", 'info');
            }    
        };
        
      //获取汇总列表
        viewModel.sumData = function(chr_id,chr_code,billtype_code){
        	var data = {
        			"chr_code": chr_code,
        			"chr_id": chr_id,	
        			"billtype_code": billtype_code,
        	}
        	$.ajax({
                type: 'get',
                url: sumListURL + "?tokenid=" + tokenid + "&ajax=noCache",
                data: data,
                dataType: 'JSON',
                async: false,
                success: function (result) {
                    if (result.errorCode == "0") {
                        viewModel.exDataTable2.setSimpleData(result.data);                     
                    } else {
                        ip.ipInfoJump("错误", 'error');
                    }
                }, error: function () {
                    ip.ipInfoJump(result.message, 'error');
                }
            });
        }
        
    	//获取视图列表
        viewModel.supData = function(chr_id, type,chr_code,oid, status, billtypecode, menu_id) {
        	var data = {
        			"chr_code": chr_code,
        			"chr_id": chr_id,
        			"type": type,
        			"oid": oid,
        			"status": status,
        			"billtypecode": billtypecode,
        			"menu_id": pageId,
        	}
        	$.ajax({
                type: 'get',
                url: viewListURL + "?tokenid=" + tokenid + "&ajax=noCache",
                data: data,
                dataType: 'JSON',
                async: false,
                success: function (result) {
                    if (result.dataDetail != null) {
                        viewModel.exDataTable.setSimpleData(result.dataDetail);                     
                    } else {
                        ip.ipInfoJump("错误", 'error');
                    }
                }, error: function () {
                    ip.ipInfoJump("错误", 'error');
                }
            });
        };
        
      //初始化部门树
        viewModel.initDepTree = function () {
        	$.ajax({
	            type: 'get',
	            url: depTreeURL + "?tokenid=" + tokenid + "&ajax=noCache",
	            data: {"ele_code":eleCode},
	            dataType: 'JSON',
	            async: false,
	            success: function (result) {
	            	if(result.data.length>0) {
	            		var dep_array = [];
	            		viewModel.supData("", "", "", "", "9", billTypeCode, pageId);
	            		var exData = viewModel.exDataTable.getSimpleData();	            		
	            		for(var i=0;i<result.data.length;i++) {
	            			var flag = 0;
	            			var chrName = result.data[i].CHR_CODE + " " +result.data[i].CHR_NAME;
	            			if(result.data[i].TYPE == "AGENCY"){
	            				for(var j = 0;j<exData.length;j++) {
		            				if(exData[j].AGENCY_ID == result.data[i].CHR_ID){
		            					var chrName = result.data[i].CHR_CODE + " " +result.data[i].CHR_NAME + "<font color='green'>(已复核)</font>";
		            				}
		            			}
	            			}
	            			var showTreeLevels = showTreeLevel.split("+");
	            			var sumBillTypes = sumBillTypeCode.split("+");
	            			for(var level=0;level<showTreeLevels.length;level++) {
	            				if(result.data[i].LEVEL_NUM == showTreeLevels[level]){
		            				viewModel.sumData(result.data[i].CHR_ID, result.data[i].CHR_CODE,sumBillTypes[level]);
		    	            		var exData2 = viewModel.exDataTable2.getSimpleData();
		            				viewModel.supData(result.data[i].CHR_ID, result.data[i].TYPE, result.data[i].CHR_CODE, result.data[i].OID, "9", billTypeCode, pageId);
		    	            		var exData3 = viewModel.exDataTable.getSimpleData();
		    	            		if(exData3.length>0) {
		    	            			if(exData3[0].STATUS_CODE == "1") {
		    	            				var chrName = result.data[i].CHR_CODE + " " +result.data[i].CHR_NAME + "<font color='green'>(已上报)</font>";
		    	            			}else{
		    	            				for(var j = 0;j<exData2.length;j++) {
			    	            				if(showTreeLevels[level] == "1"){
			    	            					if(exData2[j].OID == result.data[i].CHR_CODE){
						            					var chrName = result.data[i].CHR_CODE + " " +result.data[i].CHR_NAME + "<font color='green'>(已提交)</font>";
						            				}
			    	            				}else{
			    	            					if(exData2[j].MOFDEP_CODE == result.data[i].CHR_CODE){
						            					var chrName = result.data[i].CHR_CODE + " " +result.data[i].CHR_NAME + "<font color='green'>(已提交)</font>";
						            				}
			    	            				}
					            				
					            			}
		    	            			}
		    	            		}
		            			}
	            			}
	            			if(result.data[i].PARENT_ID == "" || result.data[i].PARENT_ID == null) {
	            				result.data[i].PARENT_ID = "000";
	            			}
	            			var depArray = {
	                                "CHR_ID": result.data[i].CHR_ID,
	                                "CHR_CODE": result.data[i].CHR_CODE,
	                                "DISP_CODE": result.data[i].DISP_CODE,
	                                "CHR_NAME": chrName,
	                                "LEVEL_NUM": result.data[i].LEVEL_NUM,
	                                "IS_LEAF": result.data[i].IS_LEAF,
	                                "TYPE": result.data[i].TYPE,
	                                "ENABLED": result.data[i].ENABLED,
	                                "CREATE_DATE": result.data[i].CREATE_DATE,
	                                "CREATE_USER": result.data[i].CREATE_USER,
	                                "LATEST_OP_DATE": result.data[i].LATEST_OP_DATE,
	                                "IS_DELETED": result.data[i].IS_DELETED,
	                                "LATEST_OP_USER": result.data[i].LATEST_OP_USER,
	                                "LAST_VER": result.data[i].LAST_VER,
	                                "RG_CODE": result.data[i].RG_CODE,
	                                "SET_YEAR": result.data[i].SET_YEAR,
	                                "PARENT_ID": result.data[i].PARENT_ID,
	                                "OID": result.data[i].OID
	                            }
	            			dep_array.push(depArray);
	            		}
	            		var depArray = {
                                "CHR_ID": "000",
                                "CHR_CODE": "",
                                "DISP_CODE": "",
                                "CHR_NAME": "全部",
                                "LEVEL_NUM": "",
                                "IS_LEAF": "",
                                "TYPE": "",
                                "ENABLED": "",
                                "CREATE_DATE": "",
                                "CREATE_USER": "",
                                "LATEST_OP_DATE": "",
                                "IS_DELETED": "",
                                "LATEST_OP_USER": "",
                                "LAST_VER": "",
                                "RG_CODE": "",
                                "SET_YEAR": "",
                                "PARENT_ID": "",
                                "OID": ""
                            }
            			dep_array.push(depArray);
	            		viewModel.depTreeDataTable.setSimpleData(dep_array);
	            		var treeObj = $.fn.zTree.getZTreeObj("depTree");
	                    treeObj.expandAll(true);
	            	}
	            }, error: function () {
	                ip.ipInfoJump("错误", 'error');
	            }
            });
        };              

        //单位树根据状态切换
        $('#depTreeTab a').click(function (e) {
            var exStatus = e.currentTarget.innerHTML;
            if(exStatus == "当前") {
                var depTreeData1 =  window.test.depTree;
                viewModel.depTreeDataTable.setSimpleData(depTreeData1);
                viewModel.initDepTree();
            }else if(exStatus == "未办结") {
                var depTreeData1 =  window.test.depTree;
                viewModel.depTreeDataTable.setSimpleData(depTreeData1);
                viewModel.initDepTree();
                var treeObj = $.fn.zTree.getZTreeObj("depTree2");
                treeObj.expandAll(true);
            }else{
                var depTreeData1 =  window.test.depTree;
                viewModel.depTreeDataTable.setSimpleData(depTreeData1);
                viewModel.initDepTree();
                var treeObj = $.fn.zTree.getZTreeObj("depTree3");
                treeObj.expandAll(true);
            }
        });      
        
      //报表显示
        viewModel.irptShow = function(id) {
        	$.ajax({
                type: 'get',
                url: testURL + "?tokenid=" + tokenid,
                data: {"rid":"{BF71344F-B2EB-47CC-BC54-3FA9455551C0}.4607f5b328f8423f44a5fb05e55948ff"},//die
                dataType: 'JSON',
                async: false,
                success: function (result) {
                    if (result.data != null) {
                    	$("#ipot-url").append(result.data);
                    	$("#"+id)[0].before(result.data); 
                        $("#"+id)[0].src = result.data;
                        
                    } else {
                        ip.ipInfoJump("错误", 'error');
                    }
                }, error: function () {
                    ip.ipInfoJump("错误", 'error');
                }
            });
        };
        
        //报表显示
        $('#inputModal').on('shown.bs.modal', function () {
        	viewModel.irptShow("input-irpt-iframe");
        });  
        
        //详细显示报表
        $('#details-li').on('click' , function() {
        	viewModel.irptShow("input-detail-iframe");
        });

        //生成表头
     	viewModel.initData = function(id,type,code,oid,status) {
     		 var current_url = location.search;
    		$.ajax({
    			url : "/df/init/initMsg.do",
    			type : "GET",
    			dataType : "json",
    			async : true,
    			data : options,
    			success : function(datas) {
    				viewModel.viewList = datas.viewlist;// 视图信息
    				viewModel.resList = datas.reslist;// 资源信息
    				viewModel.coaId = datas.coaId;// coaid
    				viewModel.coaDetails = datas.coaDetail;// coa明细
    				viewModel.relations = datas.relationlist;// 关联关系
    				viewModel.initGridData(id,type,code,oid,status); //调用初始化表格
    			}
    		});
     	};

     	 // 初始化表格
    	viewModel.initGridData = function(id,type,code,oid,status) {
            var queryViewId;
            var tableViewDetail;
            var queryViewDetail;
           
            for ( var n = 0; n < viewModel.viewList.length; n++) {
                var view = viewModel.viewList[n];
                if (view.viewtype == pViewType.VIEWTYPE_LIST) {// 列表视图
                    if (view.orders == '0') {
                    	viewModel.tableViewDetail = view;
                        options["chr_code"] = code;
                        options["type"] = type;
                        options["chr_id"] = id;
                        options["oid"] = oid;
                        options["status"] = status;
                        options["billtypecode"] = billTypeCode;
                        options["menu_id"] = pageId;
                        payViewId = view.viewid;
                    }                    
                } 
            }
            viewModel.gridViewModel = ip.initGridWithCallBack(gridCallback,viewModel.tableViewDetail, 'testGrid', "/df/cs/selectAll.do",options, 1, false,false,true,false);
            //初始化Grid的select事件
//            viewModel.initGridSelectsFun();
            
          //初始化单位部门树
            viewModel.initDepTree();
            var treeObj = $.fn.zTree.getZTreeObj("depTree");
            treeObj.cancelSelectedNode();
    	};
        
    	//grid查询
        viewModel.gridSearch = function () {
        	ip.fuzzyQuery(viewModel.curGridData, "gridSearchInput", viewModel.gridViewModel)
        }

      //回调函数，定义全局变量viewModel.curGridData并赋值
       gridCallback = function(data){
       	viewModel.curGridData = data;
       };
    	    	
        //刷新视图
        viewModel.refresh = function(id,type,code,oid,status) {
        	var queryViewId;
            var tableViewDetail;
            var queryViewDetail;
           
            for ( var n = 0; n < viewModel.viewList.length; n++) {
                var view = viewModel.viewList[n];
                if (view.viewtype == pViewType.VIEWTYPE_LIST) {// 列表视图
                    if (view.orders == '0') {
                    	viewModel.tableViewDetail = view;
                        options["chr_code"] = code;
                        options["type"] = type;
                        options["chr_id"] = id;
                        options["oid"] = oid;
                        options["status"] = status;
                        options["billtypecode"] = billTypeCode;
                        options["menu_id"] = pageId;
                        payViewId = view.viewid;
                    }
                } else if (view.viewtype == pViewType.VIEWTYPE_QUERY) {// 查询视图
                    if (view.orders == '1') {
                        queryViewId = view.viewid;
                        queryViewDetail = view;
                        options["chr_id"] = id;
                        options["type"] = type;
                        options["chr_code"] = code;
                        options["oid"] = oid;
                        options["status"] = status;
                        options["billtypecode"] = billTypeCode;
                        options["menu_id"] = pageId;
                    }
                }
            }
            ip.setGridWithCallBack(gridCallback,viewModel.gridViewModel, "/df/cs/selectAll.do", options);
        }

        var pViewType = {
            VIEWTYPE_INPUT : "001",// 录入视图
            VIEWTYPE_LIST : "002",// 列表视图
            VIEWTYPE_QUERY : "003"// 查询视图
        };

      //跳转流程界面
        viewModel.skipPage = function() {
        	location.href="flow.html?tokenid=" + tokenid +"&menuid=" + options.svMenuId +"&menuname=" + options.svMenuName;
        }
        
        function init() {
            u.createApp({
                el: document.body,
                model: viewModel
            });
            var url=window.location.href;
            pageId = url.split("pageId=")[1].split("&")[0];
            eleCode = url.split("elecode=")[1].split("&")[0];
            showTreeLevel = url.split("showTreeLevel=")[1].split("&")[0];
            billTypeCode =  url.split("billTypeCode=")[1].split("&")[0];
            sumType = url.split("sumType=")[1].split("&")[0];
            sumBillTypeCode = url.split("sumBillTypeCode=")[1].split("&")[0];
            tokenid = ip.getTokenId();
            options = ip.getCommonOptions({});
            options['tokenid'] = tokenid;
            viewModel.initBtns();  
			//初始化下拉框
            viewModel.initDropDown();
			//初始化单位部门树
            viewModel.initDepTree("");
            var treeObj = $.fn.zTree.getZTreeObj("depTree");
            treeObj.cancelSelectedNode();
            viewModel.initData("","","","","9");
        }

        init();
    }
)