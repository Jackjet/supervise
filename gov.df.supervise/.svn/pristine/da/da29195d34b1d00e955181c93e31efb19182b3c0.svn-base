/**
 * <p>
 * Title:
 * </p>
 * <p>
 * Description:
 * </p>
 * <p>
 * Copyright: Copyright (c) 2017 北京用友政务软件有限公司
 * </p>
 * <p>
 * Company: 北京用友政务软件有限公司
 * </p>
 * <p>
 * CreateData: 2017-11-22上午9:22:55
 * </p>
 * 
 * @author songlr3
 * @version 1.0
 */
package gov.df.supervise.controller.view;

import gov.df.supervise.api.view.CsofViewService;
import gov.df.supervise.bean.view.CsofCViewEntity;

import java.io.File;
import java.io.FileInputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.WorkbookFactory;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ufgov.ip.apiUtils.UUIDTools;

@Controller
@RequestMapping(value = "/CsofCView")
public class CsofCViewController {
	
	@Autowired
	private CsofViewService csofViewService;
	
	@RequestMapping(method = RequestMethod.GET, value = "/saveCsofView.do")
	 public @ResponseBody
	 Map<String, Object> excel(String file){
//	public static void main(String[] args) {
		Map<String, Object> result = new HashMap<String, Object>();
//		File filePath = new File(file);
		File filePath = new File("C:/Users/65551/Desktop/TEST_表格测试模板.xlsx");
		CsofCViewEntity csofCView = new CsofCViewEntity();//数据表实体
		String viewId = UUIDTools.uuidRandom();
		String viewCode = filePath.getName().split("_")[0];
		csofCView.setViewId(viewId);
		csofCView.setViewName(filePath.getName());
		csofCView.setViewCode(viewCode);
		csofCView.setObjtypeCode(null);
		csofCView.setObjtypeId(null);
		csofCView.setObjtypeName(null);
		try {
			FileInputStream fis = new FileInputStream(filePath);
//			Workbook wookbook = getWorkbook(fis);
			Workbook wookbook = WorkbookFactory.create(fis);
			if (wookbook instanceof XSSFWorkbook) {
				XSSFWorkbook xWb = (XSSFWorkbook) wookbook;
				csofViewService.getExcelInfo(xWb, viewId, viewCode);
			} else if (wookbook instanceof HSSFWorkbook) {
				HSSFWorkbook hWb = (HSSFWorkbook) wookbook;
				csofViewService.getExcelInfo(hWb, viewId, viewCode);
			}
			csofViewService.saveCsofCView(csofCView);
			wookbook.close();
			result.put("errorCode", 0);
			result.put("errorMsg", "保存成功");
		} catch (Exception e) {
			result.put("errorCode", -1);
			result.put("errorMsg", "保存失败");
			result.put("message", e.getMessage());
			e.printStackTrace();
			System.out.println(e.getMessage());
		}
		return result;
	}
	
	@RequestMapping(method = RequestMethod.GET, value = "/saveExcel.do")
	 public @ResponseBody Map<String, Object> saveExcel(HttpServletRequest request){
		Map<String, List<Map<String, String>>> map = new HashMap<String, List<Map<String, String>>>();
		csofViewService.saveExcel(map);
		return null;
	}
	
	@SuppressWarnings({ "rawtypes", "unused" })
	@RequestMapping(method = RequestMethod.GET, value = "/getExcel.do")
	 public @ResponseBody Map<String, Map<String, List<Map>>> getExcel(HttpServletRequest request){
		Map<String,List<List<Map>>> result = new HashMap<String, List<List<Map>>>();
		Map<String, Map<String, List<Map>>> dataExcel = new HashMap<String, Map<String,List<Map>>>();
		try {
			String viewId = request.getParameter("viewId");
			dataExcel = csofViewService.getExcel(viewId);
		} catch (Exception e) {
			e.printStackTrace();
			System.out.println(e.getMessage());
		}		
		return dataExcel;
	}
		
}