/**
 * <p>
 * Title:
 * </p>
 * <p>
 * Description:
 * </p>
 * <p>
 * Copyright: Copyright (c) 2017 北京用友政务软件有限公司
 * </p>
 * <p>
 * Company: 北京用友政务软件有限公司
 * </p>
 * <p>
 * CreateData: 2017-9-4下午3:03:30
 * </p>
 * 
 * @author songlr3
 * @version 1.0
 */
package gov.df.supervise.controller.itemsupervision;

import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import gov.df.supervise.api.itemsupervision.ItemSupervisionService;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSONObject;

@Controller
@RequestMapping(value = "/ItemSupervision")
public class ItemSupervisionController {
	
	@Autowired
	private ItemSupervisionService itemSupervisionService;
	
	/**
	 * 首页通过监管类型id查找
	 */
	@RequestMapping(method = RequestMethod.POST, value = "/selectAllSup.do")
	public @ResponseBody Map<String, Object> selectAllSup(HttpServletRequest request, HttpServletResponse response) {
		Map<String, Object> result = new HashMap<String, Object>();
		String supTypeId = request.getParameter("supTypeId");
		try{
			List<?> data = itemSupervisionService.selectAllSup(supTypeId);
			result.put("data", data);
			result.put("errorCode", 0);
		} catch (Exception e) {
			result.put("errorCode", -1);
			result.put("errorMsg", "查询失败");
			result.put("message", e.getMessage());
		} 
		return result;
	}
	/**
	 * 通过sid查找sup、dep
	 */
	@RequestMapping(method = RequestMethod.GET, value = "/selectSupDepBySid.do")
	public @ResponseBody Map<String, Object> selectSupDepBySid(HttpServletRequest request, HttpServletResponse response) {
		Map<String, Object> result = new HashMap<String, Object>();
		String sid = request.getParameter("sid");
		try{
			List supdata = itemSupervisionService.selectSupBySid(sid);
			List  dataDetail = itemSupervisionService.selectDepBySid(sid);
			result.put("dataDetail", supdata);
			//result.put("depdata", dataDetail);
			result.put("flag", "true");
			result.put("totalElements", supdata.size());
			result.put("errorCode", 0);
		} catch (Exception e) {
			result.put("errorCode", -1);
			result.put("errorMsg", "查询失败");
			result.put("message", e.getMessage());
		}
		return result;		
	}
	/**
	 * 分解时通过depId查找处室所监管事项
	 */
	@RequestMapping(method = RequestMethod.POST, value = "/selectDepByDepId.do")
	public @ResponseBody Map<String, Object> selectDepByDepId(HttpServletRequest request, HttpServletResponse response) {
		Map<String, Object> result = new HashMap<String, Object>();
		Map<String, Object> param = new HashMap<String, Object>();
		String depId = request.getParameter("depId");
		String supTypeId = request.getParameter("supTypeId");
		try{
			@SuppressWarnings("rawtypes")
			List<Map> data = itemSupervisionService.selectAllSup(supTypeId);
			List<String> sid = new ArrayList<String>();
			for(int i=0;i<data.size();i++){
				sid.add((String)data.get(i).get("SID"));
			}
			param.put("depId", depId);
			param.put("sid", sid);
			List<?> depdata = itemSupervisionService.selectDepByDepId(param);
			result.put("depdata", depdata);
			result.put("errorCode", 0);
		} catch (Exception e) {
			result.put("errorCode", -1);
			result.put("errorMsg", "查询失败");
			result.put("message", e.getMessage());
		}
		return result;		
	}
	/**
	 * 分解时通过sid查找sup
	 */
	@RequestMapping(method = RequestMethod.POST, value = "/selectSupBySid.do")
	public @ResponseBody Map<String, Object> selectSupBySid(HttpServletRequest request, HttpServletResponse response) {
		Map<String, Object> result = new HashMap<String, Object>();
		String sid = request.getParameter("sid");
		try{
			List<?> supdata = itemSupervisionService.selectSupBySid(sid);
			result.put("supdata", supdata);
			result.put("errorCode", 0);
		} catch (Exception e) {
			result.put("errorCode", -1);
			result.put("errorMsg", "查询失败");
			result.put("message", e.getMessage());
		}
		return result;		
	}
	
	/**
	 * 新增监管事项管理
	 * @throws UnsupportedEncodingException 
	 */
	@RequestMapping(method = RequestMethod.POST, value = "/saveNewItem.do")
	public @ResponseBody Map<String, Object> saveNewItem(HttpServletRequest request, HttpServletResponse response) throws UnsupportedEncodingException {
		Map<String, Object> result = new HashMap<String, Object>();
		String supNo = request.getParameter("SUP_NO");//事项编号supNo		
		String supTypeId = request.getParameter("SUP_TYPE_NAME").split("@")[0];//request.getParameter("supTypeId");
		String supTypeName1 = request.getParameter("SUP_TYPE_NAME").split("@")[1];//request.getParameter("supTypeName");//监管类型supTypeId、supTypeCode、supTypeName
		String supTypeCode = request.getParameter("SUP_TYPE_NAME").split("@")[2];//request.getParameter("supTypeCode");
		String supTypeName = URLDecoder.decode(supTypeName1, "UTF-8");
		String supName = request.getParameter("SUP_NAME");//事项名称supName
		String workType = request.getParameter("WORK_TYPE");//工作性质workType
		String mofdepId = request.getParameter("MOFDEP_NAME").split("@")[0];
		String mofdepCode = request.getParameter("MOFDEP_NAME").split("@")[2];
		String mofdepName1 = request.getParameter("MOFDEP_NAME").split("@")[1];//负责司局mofdepId、mofdepCode、mofdepName
		String mofdepName = URLDecoder.decode(mofdepName1, "UTF-8");
		String objTypeId = request.getParameter("OBJ_TYPE_NAME").split("@")[0];
		String objTypeCode = request.getParameter("OBJ_TYPE_NAME").split("@")[2];
		String objTypeName1 = request.getParameter("OBJ_TYPE_NAME").split("@")[1];//监管对象objTypeId、objTypeCode、objTypeName
		String objTypeName = URLDecoder.decode(objTypeName1, "UTF-8");
		String depId = request.getParameter("DEP_NAME").split("@")[0];
		String depCode = request.getParameter("DEP_NAME").split("@")[2];;
		String depName1 = request.getParameter("DEP_NAME").split("@")[1];//牵头处室depId、depCode、depName
		String depName = URLDecoder.decode(depName1, "UTF-8");
		String supCycle = request.getParameter("SUP_CYCLE");//事项周期supCycle
		String supMode = request.getParameter("SUP_MODE");//监管方式supMode
		String startDate = request.getParameter("START_DATE");//起始时间startDate
		//String  = request.getParameter("");//是否汇总
		String endDate = request.getParameter("END_DATE");//截止时间endDate
		String isUnionG = request.getParameter("IS_UNION");//核查性质isUnion
		Short isUnion = new Short(isUnionG);
		String unionOrgs = request.getParameter("unionOrgs");//涉及部门unionOrgs
		String supContent = request.getParameter("SUP_CONTENT");//监管内容supContent
		String remark = request.getParameter("REMARK");//备注remark
//		String  = request.getParameter("");//机关机构
//		String  = request.getParameter("");//具体对象
//		String  = request.getParameter("");//具体内容
		@SuppressWarnings("rawtypes")
		List<Map> Objectlist = JSONObject.parseArray(request.getParameter("Objectlist"),Map.class);
		@SuppressWarnings("rawtypes")
		List<Map> EReportlist = JSONObject.parseArray(request.getParameter("EReportlist"),Map.class);
		try{
			itemSupervisionService.saveNewItem(supNo,supTypeId,supTypeCode,supTypeName,supName,workType,mofdepId,mofdepCode,mofdepName,objTypeId,objTypeCode,
					objTypeName,depId,depCode,depName,supCycle,supMode,startDate,endDate,isUnion,unionOrgs,supContent,remark,Objectlist,EReportlist);
			result.put("errorCode", 0);
		} catch (Exception e) {
			result.put("errorCode", -1);
			result.put("errorMsg", "保存失败");
			result.put("message", e.getMessage());
		} 
		return result;
	}
	
	/**
	 * 新增时具体对象查找（根据选择监管对象查询）
	 */
	@RequestMapping(method = RequestMethod.GET, value = "/selectObjectByDep.do")
	public @ResponseBody Map<String, Object> selectObjectByDep(HttpServletRequest request, HttpServletResponse response) {
		Map<String, Object> result = new HashMap<String, Object>();
		Map<String,Object> param = new HashMap<String,Object>();
//		List<String> depId = new ArrayList<String>();
//		String[] str = (request.getParameter("depId")).split(",");
//		for(int i = 0; i < str.length; i++) {
//			depId.add(str[i]);
//		}
//		String oid = request.getParameter("oid");
//		param.put("depId", depId);
//		param.put("oid", oid);
		try{
			List<?> deplist = itemSupervisionService.selectEDep();
			List<?> Objectlist = itemSupervisionService.selectObjectByDep(param);
			List<?> EReportlist = itemSupervisionService.selectEReport();
			result.put("Objectlist", Objectlist);
			result.put("deplist", deplist);
			result.put("EReportlist", EReportlist);
			result.put("errorCode", 0);
		} catch (Exception e) {
			result.put("errorCode", -1);
			result.put("errorMsg", "查询失败");
			result.put("message", e.getMessage());
		} 
		return result;		
	}
	
	/**
	 * 查询e_report表详细监管内容
	 */
//	@RequestMapping(method = RequestMethod.POST, value = "/selectEReport.do")
//	public @ResponseBody Map<String, Object> selectEReport(HttpServletRequest request, HttpServletResponse response) {
//		Map<String, Object> result = new HashMap<String, Object>();
//		try{
//			List<?> list = itemSupervisionService.selectEReport();
//			result.put("data", list);
//			result.put("errorCode", 0);
//		} catch (Exception e) {
//			result.put("errorCode", -1);
//			result.put("errorMsg", "查询失败");
//			result.put("message", e.getMessage());
//		} 
//		return result;		
//	}
	
	/**
	 * 录入页面通过sid删除事项管理
	 */
	@RequestMapping(method = RequestMethod.POST, value = "/deleteBySid.do")
	public @ResponseBody Map<String, Object> deleteBySid(HttpServletRequest request, HttpServletResponse response) {
		Map<String, Object> result = new HashMap<String, Object>();
		String sid = request.getParameter("sid");
		try{
			itemSupervisionService.deleteBySid(sid);
			result.put("errorCode", 0);
		} catch (Exception e) {
			result.put("errorCode", -1);
			result.put("errorMsg", "查询失败");
			result.put("message", e.getMessage());
		} 
		return result;		
	}
	
	/**
	 * 分解页面分解
	 */
	@RequestMapping(method = RequestMethod.POST, value = "/decompose.do")
	public @ResponseBody Map<String, Object> decompose(HttpServletRequest request, HttpServletResponse response) {
		Map<String, Object> result = new HashMap<String, Object>();
		String depTaskId = request.getParameter("depTaskId");//处室任务iD
		//监管任务编号
		//监管任务名称
		String sid = request.getParameter("sid");
		String supNo = request.getParameter("supNo");//事项编号supNo
		String supName = request.getParameter("supName");//事项名称supName
		String supModeg = request.getParameter("supMode");//监管方式supMode
		Short supMode = new Short(supModeg);
		String depId = request.getParameter("depId");
		String depCode = request.getParameter("depCode");
		String depName = request.getParameter("depName");//处室depId、depCode、depName
		String oid = request.getParameter("oid");
		String planBeginDate = request.getParameter("startDate");//起始时间startDate
		String planEndDate = request.getParameter("endDate");//截止时间endDate
		Long planCost = Long.valueOf(request.getParameter("planCost"));//计划人天成本
		String supCycle = request.getParameter("supCycle");//监管期间类型
		String remark = request.getParameter("remark");//处室备注
		try{
			itemSupervisionService.decompose(depTaskId,sid,supNo,supName,supMode,depId,depCode,depName,oid,planBeginDate,
					planEndDate,planCost,remark,supCycle);
			result.put("errorCode", 0);
		} catch (Exception e) {
			result.put("errorCode", -1);
			result.put("errorMsg", "分解失败");
			result.put("message", e.getMessage());
		} 
		return result;		
	}


}
