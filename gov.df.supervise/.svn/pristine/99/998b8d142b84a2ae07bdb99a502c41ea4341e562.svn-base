/**
 * <p>
 * Title:
 * </p>
 * <p>
 * Description:
 * </p>
 * <p>
 * Copyright: Copyright (c) 2017 北京用友政务软件有限公司
 * </p>
 * <p>
 * Company: 北京用友政务软件有限公司
 * </p>
 * <p>
 * CreateData: 2017-8-27上午11:46:47
 * </p>
 * 
 * @author songlr3
 * @version 1.0
 */
package gov.df.supervise.controller.reportform;

import gov.df.supervise.api.reportfprm.ReportFormService;
import gov.df.supervise.bean.report.CsofEReportEntity;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller
@RequestMapping(value = "/ReportForm")
public class ReportFormController {

	@Autowired
	private ReportFormService reportFormService;

	/**
	 * 录入列表通过SID、BILLTYPE_CODE查询
	 */
	@RequestMapping(method = RequestMethod.POST, value = "/selectSupReportBySidBillcode.do")
	public @ResponseBody
	Map<String, Object> selectSupReportBySidBillcode(
			HttpServletRequest request, HttpServletResponse response) {
		Map<String, Object> result = new HashMap<String, Object>();
		Map<String, Object> param = new HashMap<String, Object>();
		List<?> data = new ArrayList<Object>();
		String sid = request.getParameter("sid");
		String billtypeCode = request.getParameter("billtypeCode");
		param.put("sid", sid);
		param.put("billtypeCode", billtypeCode);
		try {
			data = reportFormService.selectSupReportBySidBillcode(param);
			result.put("data", data);
			result.put("errorCode", 0);
		} catch (Exception e) {
			result.put("errorCode", -1);
			result.put("errorMsg", "查询失败");
			result.put("message", e.getMessage());
		}
		return result;
	}

	/**
	 * 通过CHR_ID查询拼接报表URL
	 */
	@RequestMapping(method = RequestMethod.POST, value = "/selectEReportByChrId.do")
	public @ResponseBody
	Map<String, Object> selectEReportByChrId(HttpServletRequest request,
			HttpServletResponse response) {
		Map<String, Object> result = new HashMap<String, Object>();
		CsofEReportEntity csofEReportEntity = new CsofEReportEntity();
		String URL;
		String chrId = request.getParameter("chrId");
		String userid = ("&userid=" + request.getParameter("obj_id"));
		String bbq;
		String param_add_str;
		if (request.getParameter("param_add_str") == ""
				|| "".equals(request.getParameter("param_add_str"))) {
			param_add_str = "";
		} else {
			param_add_str = ("&" + request
					.getParameter("param_add_str"));
		}
		String CSOF_REPORT_IP_URL = reportFormService.getIpValue();// "http://10.15.0.191:8001/irpt/oemlogin.do?";
		String CSOF_REPORT_BI_URL = reportFormService.getBiValue();// "http://10.15.0.191:8001/bi42/showreport.do?";
		String id = ("id=" + reportFormService.getUser());
		String pw = ("&pw=" + reportFormService.getPw());
		String target = ("&target=task");
		// String task = ("&task=" + csofEReportEntity.getReportFile());
		// String resid = ("resid=" + csofEReportEntity.getReportFile());
		try {
			csofEReportEntity = reportFormService.selectEReportByChrId(chrId);
			if (csofEReportEntity.getReportType() == "1"
					|| csofEReportEntity.getReportType().equals("1")) {
				String task = ("&task=" + csofEReportEntity.getReportFile());
				if (request.getParameter("bbq_date") == "") {
					bbq = "";
				} else {
					if (csofEReportEntity.getReportCycle() == 1 || csofEReportEntity.getReportCycle().equals(1)) {
						bbq = ("&bbq="
								+ request.getParameter("bbq_date").substring(0,4) + "----").substring(0, 13);
					} else if (csofEReportEntity.getReportCycle() == 2 || csofEReportEntity.getReportCycle().equals(2)) {
						String bbqf;
						if (request.getParameter("bbq_date").substring(4, 6) == "01"
								|| request.getParameter("bbq_date").substring(4, 6) == "02"
								|| request.getParameter("bbq_date").substring(4, 6) == "03") {
							bbqf = "01";
						} else if (request.getParameter("bbq_date").substring(4, 6) == "04"
								|| request.getParameter("bbq_date").substring(4, 6) == "05"
								|| request.getParameter("bbq_date").substring(4, 6) == "06") {
							bbqf = "02";
						} else if (request.getParameter("bbq_date").substring(4, 6) == "07"
								|| request.getParameter("bbq_date").substring(4, 6) == "08"
								|| request.getParameter("bbq_date").substring(4, 6) == "09") {
							bbqf = "03";
						} else {
							bbqf = "04";
						}
						bbq = ("&bbq="
								+ request.getParameter("bbq_date").substring(0,4) + bbqf + "----").substring(0, 13);
					} else if (csofEReportEntity.getReportCycle() == 3 || csofEReportEntity.getReportCycle().equals(3)) {
						bbq = ("&bbq="
								+ request.getParameter("bbq_date").substring(0,6) + "----").substring(0, 13);
					} else {
						bbq = ("&bbq="
								+ request.getParameter("bbq_date").substring(0,8) + "----").substring(0, 13);
					}
				}
				if (request.getParameter("readonly") == "false"
						|| request.getParameter("readonly").equals("false")) {
					URL = (CSOF_REPORT_IP_URL + id + pw + target + task + userid + bbq + param_add_str);
				} else {
					String readonly = "&readonly=true";
					URL = (CSOF_REPORT_IP_URL + id + pw + target + task + userid + bbq + param_add_str + readonly);
				}
			} else {
				String resid = ("resid=" + csofEReportEntity.getReportFile());
				id = "&" + id;
				URL = (CSOF_REPORT_BI_URL + resid + id + pw + "&showmenu=false&showparams=true&calcnow=true" + param_add_str);
			}
			result.put("data", URL);
			result.put("errorCode", 0);
		} catch (Exception e) {
			result.put("errorCode", -1);
			result.put("errorMsg", "查询失败");
			result.put("message", e.getMessage());
		}
		return result;
	}
}
