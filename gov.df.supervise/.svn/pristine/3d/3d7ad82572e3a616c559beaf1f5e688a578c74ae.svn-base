package gov.df.supervise.controller.summary;

import gov.df.supervise.api.bill.BillService;
import gov.df.supervise.api.common.CommonService;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSONObject;

@Controller
@RequestMapping(value = "/df/summary")
public class SummaryController {

	@Autowired
	private CommonService commonService;

	@Autowired
	private BillService billService;

	/**
	 * 总任务单(csof_mof_bill)查询方法
	 * 
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping(method = RequestMethod.GET, value = "/getTaskSummary.do")
	public @ResponseBody
	Map<String, Object> getTaskSummary(HttpServletRequest request,
			HttpServletResponse response) {

		Map<String, Object> map = new HashMap<String, Object>();
		try {
			List resultList = new ArrayList();
			String pageInfo = null != request.getParameter("pageInfo") ? request
					.getParameter("pageInfo") : "";
			String chr_id = null != request.getParameter("CHR_ID") ? request
					.getParameter("CHR_ID") : "";
			String type_code = null != request.getParameter("TYPE_CODE") ? request
					.getParameter("TYPE_CODE") : "";

			String condition = " where 1=1 and is_valid=1 ";
			if (!chr_id.equals("") && (!type_code.equals(""))) {
				condition += "AND " + type_code + "= '" + chr_id + "'";
			}

			resultList = commonService.getDataList("vw_csof_mof_bill",
					condition, false, pageInfo);

			map.put("flag", true);
			map.put("errorCode", "0");
			map.put("dataDetail", resultList);
			map.put("totalElements", resultList.size());
		} catch (Exception e) {
			e.printStackTrace();
			map.put("errorCode", "1");
			map.put("errorMsg", "获取数据出现异常");
		}

		return map;

	}

	/**
	 * 总任务单生成方法
	 * 
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping(method = RequestMethod.POST, value = "/saveTaskSummary.do")
	public @ResponseBody
	Map<String, Object> saveTaskSummary(HttpServletRequest request,
			HttpServletResponse response) {

		Map<String, Object> map = new HashMap<String, Object>();
		try {

			int result = 0; // 执行条目数
			String billtype_code = ""; // 单据编号
			List officeList = new ArrayList();
			List supList = new ArrayList();
			Map workMap = new HashMap();

			map.put("flag", true);
			map.put("errorCode", "0");
			map.put("data", result);
		} catch (Exception e) {
			e.printStackTrace();
			map.put("errorCode", "1");
			map.put("errorMsg", "获取数据出现异常");
		}

		return map;

	}

	/**
	 * 总任务单(csof_mof_bill)修改方法
	 * 
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping(method = RequestMethod.POST, value = "/updateTaskSummary.do")
	public @ResponseBody
	Map<String, Object> updateTaskSummary(HttpServletRequest request,
			HttpServletResponse response) {

		Map<String, Object> map = new HashMap<String, Object>();
		try {
			int result = 0;
			String billtype_code = ""; // 单据编号
			Map mofBillData = new HashMap(); // 总任务单生成录入数据

			if (null != request.getParameter("billtype_code")) {
				billtype_code = request.getParameter("billtype_code");
			}

			if (null != request.getParameter("mofBillData")) {
				mofBillData = JSONObject.parseObject(request.getParameter(
						"mofBillData").toString());
			}
			result = billService.updateMofBill(mofBillData, billtype_code);

			map.put("flag", true);
			map.put("errorCode", "0");
			map.put("data", result);
		} catch (Exception e) {
			e.printStackTrace();
			map.put("errorCode", "1");
			map.put("errorMsg", "获取数据出现异常");
		}

		return map;

	}

	/**
	 * 总任务单(csof_mof_bill)删除方法
	 * 
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping(method = RequestMethod.POST, value = "/deleteTaskSummary.do")
	public @ResponseBody
	Map<String, Object> deleteTaskSummary(HttpServletRequest request,
			HttpServletResponse response) {

		Map<String, Object> map = new HashMap<String, Object>();
		try {
			int result = 0;
			String ids = request.getParameter("ids") != null ? request
					.getParameter("ids") : "";
			result = billService.deleteMofBill(ids, "id"); // 返回数据库执行条目数
			map.put("flag", true);
			map.put("errorCode", "0");
			map.put("result", result);
		} catch (Exception e) {
			e.printStackTrace();
			map.put("errorCode", "1");
			map.put("errorMsg", "获取数据出现异常");
		}

		return map;

	}

}
