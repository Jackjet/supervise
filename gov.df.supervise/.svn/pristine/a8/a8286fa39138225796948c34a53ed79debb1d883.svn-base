package gov.df.supervise.service.csofacc;

import gov.df.supervise.service.common.persistence.annotation.MyBatisDao;

import java.util.List;
import java.util.Map;

@MyBatisDao
public interface csofAccDao {
  /**
   * 新增事项
   * @param param
   */
  public void saveAccSup(Map<String, Object> param);

  /**
   * 查询事项详细信息
   * @param sid
   * @return
   */
  public Map<String, Object> getAccSup(String sid);

  /**
   * 修改事项
   * @param param
   */
  public void updateAccSup(Map<String, Object> param);

  /**
   * 删除事项
   * @param sid
   */
  public void deleteAccSup(String sid);

  /**
   * 新增工作记录
   * @param param
   */
  public void saveAccWork(Map<String, Object> param);

  /**
   * 查询工作记录详细信息
   * @param sid
   * @return
   */
  public List getAccWork(String sid);

  /**
   * 修改工作记录
   * @param param
   */
  public void updateAccWork(Map<String, Object> param);

  /**
   * 单独删除工作记录
   * @param 
   */
  public void deleteAccWork(Map<String, Object> param);

  /**
   * 删除事项时同时删除工作记录
   * @param id
   */
  public void deleteAllAccWork(String sid);

  /**
   * 新增问题记录
   * @param param
   */
  public void saveAccProblem(Map<String, Object> param);

  /**
   * 查询问题记录详细信息
   * @param sid
   * @return
   */
  public List getAccProblem(String sid);

  /**
   * 修改问题记录
   * @param param
   */
  public void updateAccProblem(Map<String, Object> param);

  /**
   * 单独删除问题记录
   * @param 
   */
  public void deleteAccProblem(Map<String, Object> param);

  /**
   * 删除事项时同时删除问题记录
   * @param 
   */
  public void deleteAllAccProblem(String sid);

  /**
   * 录入界面的树
   * @param sup_type_id
   * @return
   */
  public List getSupData(Map<String, Object> param);

  /**
   * 通过监管类型来树
   */
  public List getSupDataById(Map<String, Object> param);

  /**
   * 修改事项表的工作进展
   */
  public void updateSupStatus(Map<String, Object> param);

  /**
   * 获取账簿
   * 
   */
  public List getAccBook();

  /**
   * 获取树信息
   */
  public List getBookSetById(String book_id);

  /**
   * 通过点击树获取工作记录
   */
  public List getAccWorkByMonth(Map<String, Object> param);

  /**
   * 找到set_id，写入事项表里
   */
  public String getAccSupByBookId(String book_id);

  /**
   * 月结
   */
  /**
   * 通过父级id找到这个账套的年度
   * @param parent_id
   * @return
   */
  public String getYear(String parent_id);

  /**
   * 获取下一个账套的set_id
   * @param param
   * @return
   */
  public String getSetId(Map<String, Object> param);

  /**
   * 通过set_id来月结，反月结
   * @param set_id
   */
  public void updateAccBookBySetid(Map<String, Object> param);

  /**
   * 下一个账套的开账,反月结
   * @param setId
   */
  public void updateAccBookSet(Map<String, Object> param);

  /**
   * 如果这个事项已经完成就把set_id修改
   * @param 
   */
  public void updateAccSupBySid(Map<String, Object> param);

  /**
   * 月结时把事项表数据复制一份出去
   * @param param
   */
  public void saveAccSupEnd(Map<String, Object> param);

  /**
   * 查找月结表里已完成的事项数量
   */
  public int getCount(String sid);

  /**
   * 反月结
   */
  public void modityAccSupBysid(Map<String, Object> param);

  public void deleteAccSupEnd(String sid);

  /**
   * 查找月结表里当月的事项数量
   */
  public int getCountEnd(Map<String, Object> param);

  /**
   * 得到台账菜单
   */
  public List getAccMenu(String menu_id);

  /**
   * 得到处汇总左侧树
   */
  public List getBookDepById(String book_id);

}
