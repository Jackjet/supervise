package gov.df.supervise.controller.common;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import gov.df.supervise.api.common.CommonActionService;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSONObject;
import com.ufgov.ip.apiUtils.UUIDTools;

@Controller
@RequestMapping(value = "/df/common")
public class CommonActionController {

	@Autowired
	private CommonActionService commonActionService;

	@RequestMapping(method = RequestMethod.GET, value = "/commonAction.do")
	public @ResponseBody
	Map<String, Object> commonAction(HttpServletRequest request, HttpServletResponse response) {
		
		String action = "";
		String pageInfo = "";
		String billtype_code = "";
		
		Map  operationMap = new HashMap();
		Map  conditionMap = new HashMap(); 
		List batchData =  new ArrayList ();
		
		Map<String,Object> message = new HashMap<String,Object>();
		
		if( null != request.getParameter("action")){
			action = request.getParameter("action").toString();
		}
		
		if( null != request.getParameter("pageInfo")){
			pageInfo = request.getParameter("pageInfo").toString();
		}
		
		if( null != request.getParameter("billtype_code")) {
			billtype_code = request.getParameter("billtype_code");
		}
		
		if( null != request.getParameter("condition_data")){
			conditionMap = JSONObject.parseObject(request.getParameter("condition_data").toString());
		}
		
		if( null != request.getParameter("operation_data")){
			if(action.equals("INPUT")) {
		        operationMap = JSONObject.parseObject(request.getParameter("operation_data").toString());
			}else if(action.equals("INPUTBATCH")) {
				batchData = JSONObject.parseArray(request.getParameter("operation_data").toString(), Map.class);
			}
		}

		if(billtype_code.equals("") || action.equals("")){
			message.put("errorCode", "1");
			message.put("errorMsg", "参数传输错误,请检查！");
		}else{
			message = commonActionService.action(action, billtype_code, pageInfo, operationMap, conditionMap, batchData);
		}
		
		return message;
	}

	/**
	 * 获取UUID
	 * 
	 * @param request
	 * @param response
	 * @return UUID
	 */
	@RequestMapping(method = RequestMethod.POST, value = "/getUUID.do")
	public @ResponseBody
	String getUUID(HttpServletRequest request, HttpServletResponse response) {
		return UUIDTools.uuidRandom();
	}
	
}
