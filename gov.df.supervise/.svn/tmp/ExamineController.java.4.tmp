package gov.df.supervise.controller.examine;

import gov.df.fap.api.workflow.IBillTypeServices;
import gov.df.supervise.api.examine.ExamineService;
import gov.df.supervise.api.workflow.WorkFlow;
import gov.df.supervise.bean.examine.CsofSupBillEntity;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ufgov.ip.apiUtils.UUIDTools;

@Controller
@RequestMapping(value = "/df/cs")
public class ExamineController {
  @Autowired
  private ExamineService csService;

  @Autowired
  private WorkFlow workflow;

  @Autowired
  private IBillTypeServices billTypeService;

  @RequestMapping(value = "/update.do", method = RequestMethod.GET)
  @ResponseBody
  public Map<String, Object> update(HttpServletRequest request) throws Exception {
    Map<String, Object> result = new HashMap<String, Object>();
    String id = request.getParameter("id");
    // String is_end = request.getParameter("is_end");
    String is_valid = "0";
    try {
      csService.update(id, is_valid);
      result.put("errorCode", 0);
    } catch (Exception e) {
      result.put("errorCode", -1);
      result.put("message", e.getMessage());
    }
    return result;

  }

  @RequestMapping(value = "/selectAll.do", method = RequestMethod.GET)
  @ResponseBody
  public Map<String, Object> selectAll(HttpServletRequest request) throws Exception {
    Map<String, Object> result = new HashMap<String, Object>();
    String chr_code = request.getParameter("chr_code");
    String chr_id = request.getParameter("chr_id");
    String type = request.getParameter("type");
    String oid = request.getParameter("oid");
    String status = request.getParameter("status");
    String billtype_code = request.getParameter("billtypecode");
    String menu_id = request.getParameter("menu_id");
    List data = csService.selectAll(chr_code, chr_id, type, oid, status, billtype_code, menu_id);
    if (data != null) {
      result.put("errorCode", 0);
      result.put("flag", true);
      result.put("totalElements", data.size());
      result.put("dataDetail", data);
    } else {
      result.put("errorCode", -1);
    }
    return result;
  }

  //汇总操作
  @RequestMapping(value = "/doCollect.do", method = RequestMethod.GET)
  @ResponseBody
  public Map<String, Object> doCollect(HttpServletRequest request) throws Exception {
    Map<String, Object> result = new HashMap<String, Object>();
    String data = request.getParameter("data");
    String type = request.getParameter("type");
    int total = Integer.parseInt(request.getParameter("total"));
    String billtype_code = request.getParameter("sumBilltype_code");
    String menu_id = request.getParameter("menu_id");
    String billtype_code1 = request.getParameter("billtype_code");
    String op_type = request.getParameter("op_type");
    String op_name = request.getParameter("op_name");
    String oid = request.getParameter("oid");
    try {
      if (type != null && type.equals("MOFDEP")) {
        // CsofSupBillEntity Data = JSONObject.parseObject(data, CsofSupBillEntity.class);
        //.out.println(Data.getId());
        csService.doCollect(billtype_code, data, total);
        // boolean res = workflow.doWorkFlow(menu_id, Data.getId(), billtype_code1, op_type, op_name);
        // result.put("res", res);
        result.put("errorCode", 0);
      } else if (type != null && type.equals("OFFICE")) {
        // CsofSupBillMofdepEntity Data = JSONObject.parseObject(data, CsofSupBillMofdepEntity.class);
        csService.doOfficeCollect(billtype_code, data, total);
        // boolean res = workflow.doWorkFlow(menu_id, Data.getId(), billtype_code1, op_type, op_name);
        //result.put("res", res);
        result.put("errorCode", 0);
      }
    } catch (Exception e) {
      result.put("errorCode", -1);
      result.put("message", e.getMessage());
    }
    return result;
  }

  //撤销汇总
  @RequestMapping(value = "/undoSummary.do", method = RequestMethod.GET)
  @ResponseBody
  public Map<String, Object> undoSummary(HttpServletRequest request) throws Exception {
    Map<String, Object> result = new HashMap<String, Object>();
    String chr_code = request.getParameter("chr_code");
    String chr_id = request.getParameter("chr_id");
    String id = request.getParameter("id");
    String type = request.getParameter("type");
    int total = Integer.parseInt(request.getParameter("total"));
    String menu_id = request.getParameter("menu_id");
    String billtype_code = request.getParameter("sumBilltype_code");
    String billtype_code1 = request.getParameter("billtype_code");
    String op_type = request.getParameter("op_type");
    String op_name = request.getParameter("op_name");
    String oid = request.getParameter("oid");
    try {
      if (type != null && type.equals("MOFDEP")) {
        csService.undoSummary(chr_code, id, total);
        //  boolean data = workflow.doWorkFlow(menu_id, id, billtype_code1, op_type, op_name);
        //  result.put("data", data);
        result.put("errorCode", 0);
      } else if (type != null && type.equals("OFFICE")) {
        csService.undoOfficeSummary(chr_id, id, total);
        // boolean data = workflow.doWorkFlow(menu_id, id, billtype_code1, op_type, op_name);
        // result.put("data", data);
        result.put("errorCode", 0);
      }
    } catch (Exception e) {
      result.put("errorCode", -1);
      result.put("message", e.getMessage());
    }
    return result;
  }

  //动态按钮获取
  @RequestMapping(value = "/getActionButton.do", method = RequestMethod.GET)
  @ResponseBody
  public Map<String, Object> getActionButton(HttpServletRequest request) throws Exception {
    Map<String, Object> result = new HashMap<String, Object>();
    String menu_id = request.getParameter("menu_id");
    try {
      List data = csService.getActionButton(menu_id);
      result.put("data", data);
      result.put("errorCode", 0);
    } catch (Exception e) {
      result.put("errorCode", -1);
      result.put("message", e.getMessage());
    }
    return result;

  }

  @RequestMapping(value = "/inputbill.do", method = RequestMethod.GET)
  @ResponseBody
  public Map<String, Object> inputSupBill(HttpServletRequest request) throws Exception {
    Map<String, Object> result = new HashMap<String, Object>();
    String billtype_code = request.getParameter("billtype_code");
    String sid = request.getParameter("sid");
    String op_type = request.getParameter("op_type");
    String op_name = request.getParameter("op_name");
    String menu_id = request.getParameter("menu_id");
    String chr_id = request.getParameter("chr_id");
    String chr_code = request.getParameter("chr_code");
    String chr_name = request.getParameter("chr_name");
    String task_id = request.getParameter("task_id");
    String sup_date = request.getParameter("sup_date");
    String dep_id = request.getParameter("dep_id");
    String mofdep_id = request.getParameter("mofdep_id");
    String id = UUIDTools.uuidRandom(); // 自动生成id
    Map CsofSupBillEntity = new HashMap<String, CsofSupBillEntity>();
    String bill_no = billTypeService.getBillNo(billtype_code, CsofSupBillEntity);
    try {
      csService.inputSupBill(sid, bill_no, id, billtype_code, chr_id, chr_code, chr_name, task_id, sup_date, dep_id,
        mofdep_id);
      workflow.doWorkFlow(menu_id, id, billtype_code, op_type, op_name);
      result.put("data", bill_no);
      result.put("errorCode", 0);
    } catch (Exception e) {
      result.put("errorCode", -1);
      result.put("message", e.getMessage());
    }
    return result;
  }

  @RequestMapping(value = "/getbill.do", method = RequestMethod.GET)
  @ResponseBody
  public Map<String, Object> selectBill(HttpServletRequest request) throws Exception {
    Map<String, Object> result = new HashMap<String, Object>();
    String billtype_code = request.getParameter("billtype_code");
    String chr_code = request.getParameter("chr_code");
    String chr_id = request.getParameter("chr_id");
    try {
      List data = csService.selectBill(billtype_code, chr_code, chr_id);
      result.put("data", data);
      result.put("errorCode", 0);
    } catch (Exception e) {
      result.put("errorCode", -1);
      result.put("message", e.getMessage());
    }
    return result;
  }

}
