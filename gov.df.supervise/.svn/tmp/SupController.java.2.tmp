package gov.df.supervise.controller.sup;

import gov.df.supervise.api.common.CommonService;
import gov.df.supervise.api.sup.SupService;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSONObject;

@Controller
@RequestMapping(value = "/df/sup")
public class SupController {

  @Autowired
  private SupService supService; // 监管事项服务

  @Autowired
  private CommonService commonService; // 监管事项服务

  @RequestMapping(method = RequestMethod.GET, value = "/getSup.do")
  public @ResponseBody
  Map<String, Object> getSup(HttpServletRequest request, HttpServletResponse response) {

<<<<<<< .mine
    Map<String, Object> map = new HashMap<String, Object>();
    try {
      List resultList = new ArrayList();
      String pageInfo = null != request.getParameter("pageInfo") ? request.getParameter("pageInfo") : "";
      String condition = "";
      String chr_id = null != request.getParameter("CHR_ID") ? request.getParameter("CHR_ID") : "";
      String type_code = null != request.getParameter("TYPE_CODE") ? request.getParameter("TYPE_CODE") : "";
      String status = null != request.getParameter("STATUS") ? request.getParameter("STATUS") : "";
=======
	    Map<String, Object> map = new HashMap<String, Object>();
	    try {
	      List resultList = new ArrayList();
	      String pageInfo = null != request.getParameter("pageInfo") ? request.getParameter("pageInfo") : "";
	      String condition = "";
	      String chr_id = null != request.getParameter("CHR_ID") ? request.getParameter("CHR_ID") : "";
	      String type_code = null != request.getParameter("TYPE_CODE") ? request.getParameter("TYPE_CODE") : "";
	      String status = null != request.getParameter("STATUS") ? request.getParameter("STATUS") : "";
	      
	      if (!chr_id.equals("") && (!type_code.equals(""))) {
	          condition = "AND " + type_code + "= '" + chr_id + "'";
	        }
	        if (!status.equals("")) {
	          if (status.equals("1")) {
	            condition += " AND APPROVE_DATE IS NOT NULL";
	          } else if (status.equals("0")) {
	            condition += " AND APPROVE_DATE IS NULL";
	          } else if (status.equals("-1")) {
	            return map;
	          }
	        }
	      resultList = commonService.getDataList("CSOF_E_SUP", condition + " and is_valid=1",false,pageInfo);
	      map.put("flag", true);
	      map.put("errorCode", "0");
	      map.put("dataDetail", resultList);
	      map.put("totalElements", resultList.size());
	    } catch (Exception e) {
	      e.printStackTrace();
	      map.put("errorCode", "1");
	      map.put("errorMsg", "获取数据出现异常");
	    }
>>>>>>> .r1040

      if (!chr_id.equals("") && (!type_code.equals(""))) {
        condition = "AND " + type_code + "= '" + chr_id + "'";
      }
      if (!status.equals("")) {
        if (status.equals("1")) {
          condition += " AND APPROVE_DATE IS NOT NULL";
        } else if (status.equals("0")) {
          condition += " AND APPROVE_DATE IS NULL";
        } else if (status.equals("-1")) {
          return map;
        }
      }
      resultList = commonService.getDataList("CSOF_E_SUP", condition + " and is_valid=1", false, pageInfo);
      map.put("flag", true);
      map.put("errorCode", "0");
      map.put("dataDetail", resultList);
      map.put("totalElements", resultList.size());
    } catch (Exception e) {
      e.printStackTrace();
      map.put("errorCode", "1");
      map.put("errorMsg", "获取数据出现异常");
    }

    return map;

  }

  /**
   * 监管事项查询
   * @param request
   * @param response
   * @return
   */
  @RequestMapping(method = RequestMethod.POST, value = "/saveSup.do")
  public @ResponseBody
  Map<String, Object> saveSup(HttpServletRequest request, HttpServletResponse response) {

    Map<String, Object> map = new HashMap<String, Object>();
    try {
      int result = 0;
      List supList = new ArrayList();
      List reportList = new ArrayList();
      if (null != request.getParameter("eSuplist")) {
        supList = JSONObject.parseArray("[" + request.getParameter("eSuplist") + "]", Map.class);
      }
      if (null != request.getParameter("EReportlist")) {
        reportList = JSONObject.parseArray(request.getParameter("EReportlist"), Map.class);
      }
      String billtype_code = request.getParameter("billtype_code") != null ? request.getParameter("billtype_code")
        .toString() : "";

      result = supService.saveSup(supList, reportList, billtype_code);

      map.put("flag", true);
      map.put("errorCode", "0");
      map.put("data", result);
    } catch (Exception e) {
      e.printStackTrace();
      map.put("errorCode", "1");
      map.put("errorMsg", "获取数据出现异常");
    }

    return map;

  }

  /**
   * 监管事项修改
   * @param request
   * @param response
   * @return
   */
  @RequestMapping(method = RequestMethod.POST, value = "/updateSup.do")
  public @ResponseBody
  Map<String, Object> updateSup(HttpServletRequest request, HttpServletResponse response) {

    Map<String, Object> map = new HashMap<String, Object>();
    try {
      int result = 0;
      List supList = new ArrayList();
      List reportList = new ArrayList();
      if (null != request.getParameter("eSuplist")) {
        supList = JSONObject.parseArray("[" + request.getParameter("eSuplist") + "]", Map.class);
      }
      if (null != request.getParameter("EReportlist")) {
        reportList = JSONObject.parseArray(request.getParameter("EReportlist"), Map.class);
      }
      String billtype_code = request.getParameter("billtype_code") != null ? request.getParameter("billtype_code")
        .toString() : "";

      result = supService.saveSup(supList, reportList, billtype_code);

      map.put("flag", true);
      map.put("errorCode", "0");
      map.put("data", result);
    } catch (Exception e) {
      e.printStackTrace();
      map.put("errorCode", "1");
      map.put("errorMsg", "获取数据出现异常");
    }

    return map;

  }

  /**
   * 监管事项查询
   * @param request
   * @param response
   * @return
   */
  @RequestMapping(method = RequestMethod.POST, value = "/deleteSup.do")
  public @ResponseBody
  Map<String, Object> deleteSup(HttpServletRequest request, HttpServletResponse response) {

    Map<String, Object> map = new HashMap<String, Object>();
    try {
      int result = 0;
      String key = request.getParameter("id") != null ? request.getParameter("id") : "id";
      String data = request.getParameter("data") != null ? request.getParameter("data") : "";
      List dataList = JSONObject.parseArray(data, Map.class);
      result = supService.deleteSup(dataList, key); //返回数据库执行条目数
      map.put("flag", true);
      map.put("errorCode", "0");
      map.put("result", result);
    } catch (Exception e) {
      e.printStackTrace();
      map.put("errorCode", "1");
      map.put("errorMsg", "获取数据出现异常");
    }

    return map;

  }
	
	
	/**
	   * 
	   * @param request
	   * @param response
	   * @return
	   */
	  @RequestMapping(method = RequestMethod.GET, value = "/getSupTree.do")
	  public @ResponseBody
	  Map<String, Object> getTaskTree(HttpServletRequest request, HttpServletResponse response) {
	    Map<String, Object> map = new HashMap<String, Object>();
	    try {
	      List resultList = new ArrayList();
	      resultList = supService.getSupTree();

	      map.put("errorCode", "0");
	      map.put("flag", true);
	      map.put("dataDetail", resultList);
	      map.put("totalElements", resultList.size());
	    } catch (Exception e) {
	      e.printStackTrace();
	      map.put("errorCode", "1");
	      map.put("errorMsg", "获取数据出现异常");
	    }

	    return map;

	  }

}
